types:
  tls:
    type: object
    disabled: true
    properties:
      cert_file:
        type: string
        description: |-
          TLS certificate file.

      key_file:
        type: string
        description: |-
          TLS certificate key file.

      ca_file:
        type: string
        description: |-
          TLS certificate authority file. Defaults to system trust store.

      cipher_suites:
        type: string
        description: |-
          When set, only the specified TLS cipher suites will be allowed. Values must match the golang version used to build the server.

      curve_preferences:
        type: string
        description: |-
          List of TLS cipher curves to use in order.

      insecure:
        type: boolean
        description: |-
          Skip certificate verification. This only applies to outgoing connections, NOT incoming client connections. **not recommended.**

      timeout:
        type: duration
        default: 500ms
        description: |-
          TLS handshake timeout.

      verify:
        type: boolean
        default: false
        description: |-
          If true, require and verify client certificates. Does not apply to monitoring.

      verify_and_map:
        type: boolean
        default: false
        description: |-
          If true, require and verify client certificates and map certificate values for authentication. Does not apply to monitoring.

      verify_cert_and_check_known_urls:
        type: boolean
        description: |-
          Only used in a non-client context where `verify` is true, such as cluster and gateway configurations.
          The incoming connection's certificate x509v3 Subject Alternative Name DNS entries will be matched against
          all URLs. If a match is found, the connection is accepted and rejected otherwise.

          For gateways, the server will match all names in the certificate against the gateway URLs.

          For clusters, the server will match all names in the certificate against the route URLs.

          A consequence of this, is that dynamic cluster growth may require config changes in other clusters where this
          option is true. DNS name checking is performed according to RFC6125. Only the full wildcard is supported for the
          the left most domain.

      connection_rate_limit:
        type: integer
        description: |-

      pinned_certs:
        type: string
        multiple: true
        description: |-
          List of hex-encoded SHA256 of DER-encoded public key fingerprints. When present, during the TLS handshake, the
          provided certificate's fingerprint is required to be present in the list, otherwise the connection will be
          closed.
