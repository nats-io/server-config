---
types:
  accounts:
    type: map(account)
    description: |-
      An account is the unit of multi-tenancy. Messaging performed
      by users within an account can be observed (by default) by any
      user. However, users *across* accounts are completely isolated
      and messages will never be observed even on the same subjects.

  account:
    type: object
    description: |-
      An account can opt-in to export and/or import zero or more
      *streams* and *services*.

    properties:
      users:
        type: array(user)
        description: |-
          A list of users under this account.

      exports:
        type: array(account-export)
        description: |-
          A list of exports for this account.

      imports:
        type: array(account-import)
        description: |-
          A list of imports for this account.

  account-export:
    type: object
    properties:
      stream:
        type: string
        description: |-
          A subject or subject with wildcards that the account will publish to.
          Exclusive of `service`.
        examples:
          - value: 'foo.>'

      service:
        type: string
        description: |-
          A subject or subject with wildcards that the account will subscribe to.
          Exclusive of `stream`.
        examples:
          - value: 'bar.>'

      accounts:
        type: array(string)
        description: |-
          A list of account names that can import the stream or service.
          If not specified, the service or stream is public and any account
          can import it.
        examples:
          - value: '[B, C]'

      response_type:
        type: string
        default: single
        description: |-
          Indicates if a response to a service request consists of a single
          or a stream of messages. Possible values are `single` or `stream`.

  account-import:
    type: object
    properties:
      stream:
        type: source-config
        description: |-
          Stream import source configuration.
          Exclusive of `service`.

      service:
        type: source-config
        description: |-
          Stream import source configuration.
          Exclusive of `stream`.

      prefix:
        type: string
        description: |-
          A local subject prefix mapping for the imported stream.
          Applicable to `stream`.

      to:
        type: string
        description: |-
          A local subject mapping for the imported service.
          Applicable to `service`.

  source-config:
    type: object
    properties:
      account:
        type: string
        description: |-
          Account name owning the export.

      subject:
        type: string
        description: |-
          The subject under which the stream or service is made
          accessible to the importing account.

  user:
    type: object
    properties:
      username:
        type: string
        description: |-
          Name of the user.
        aliases:
          - user

      password:
        type: string
        description: |-
          Password of the user. This can be a free-text value
          (not recommended) or a bcrypted value using the
          `nats server passwd` CLI command.
        aliases:
          - pass

      nkey:
        type: string
        description: |-
          Public NKey identifying the user. The value begins with a `U`
          character. Exclusive with `username` and `password`.
        examples:
          - value: UDXU4RCSJNZOIQHZNWXHXORDPRTGNJAHAHFRGZNEEJCPQTT2M7NLCNF4

      permissions:
        type: permissions
